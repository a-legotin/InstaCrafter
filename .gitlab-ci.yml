stages:
  - build-net
  - build-app
  - test-net
  - test-app
  
cache:
  paths:
    - src/clients/react-app/node_modules/
    
build-net:
  stage: build-net
  image: mcr.microsoft.com/dotnet/sdk:6.0-focal
  script:
    - apt update -y -q && apt install -y -q libc-dev libgdiplus
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet restore src/common/InstaCrafter.Extensions/InstaCrafter.Extensions.csproj --locked-mode
    - dotnet build src/common/InstaCrafter.Extensions/InstaCrafter.Extensions.csproj -c Release --no-restore --no-dependencies

test-net:
  stage: test-net
  script:
    - apt update -y -q && apt install -y -q libc-dev libgdiplus
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet tool install -g dotnet-reportgenerator-globaltool
    - dotnet tool install --global coverlet.console
    - dotnet test src/tests/InstaCrafter.Extensions.Tests/InstaCrafter.Extensions.Tests.csproj --collect:"XPlat Code Coverage"
    - reportgenerator "-reports:src/tests/InstaCrafter.Extensions.Tests/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports/Coverage/Text" -reportTypes:TextSummary
    - reportgenerator "-reports:src/tests/InstaCrafter.Extensions.Tests/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports/Coverage/Html" -reportTypes:Html
    - cat Reports/Coverage/Text/Summary.txt
  coverage: /^\s*Line coverage:\s*\d+.\d+\%$/

build-app:
  stage: build-app
  image: node
  script:
    - cd src/clients/react-app/
    - npm install --progress=false
    - npm run build

test-app:
  stage: test-app
  script:
    - cd src/clients/react-app/
    - npm install --progress=false
    - npm run build
    - CI=true npm test

