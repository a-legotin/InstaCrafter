image: mcr.microsoft.com/dotnet/sdk:5.0

stages:
  - build-net
  - test-net
  - build-net-images
  - build-app
  - build-app-image
  - deploy

cache:
  paths:
    - src/clients/react-app/node_modules/

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375

services:
  - docker:18.09.7-dind

build-net:
  stage: build-net
  image: mcr.microsoft.com/dotnet/sdk:5.0-bullseye-slim
  tags:
    - k8s
  script:
    - apt update -y -q && apt install -y -q libc-dev libgdiplus
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/2/packages/nuget/index.json" --name cozybus --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/4/packages/nuget/index.json" --name instasharper --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet restore src/InstaCrafter.sln
    - dotnet build src/InstaCrafter.sln -c Release

build-net-images:
  stage: build-net-images
  image: docker:stable
  before_script:
    - apk add --no-cache docker-compose
    - docker info
  script:
    - echo "Building docker .NET images"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose build
    - echo "Current registry image"
    - echo $CI_REGISTRY_IMAGE
    - docker tag instacrafter-identity:latest $CI_REGISTRY_IMAGE/instacrafter-identity:latest
    - echo "Pushing docker image to registry"
    - docker push $CI_REGISTRY_IMAGE/instacrafter-identity:latest

test-net:
  stage: test-net
  tags:
    - k8s
  image: mcr.microsoft.com/dotnet/sdk:5.0-bullseye-slim
  script:
    - apt update -y -q && apt install -y -q libc-dev libgdiplus
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/2/packages/nuget/index.json" --name cozybus --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet tool install -g dotnet-reportgenerator-globaltool
    - dotnet tool install --global coverlet.console
    - dotnet test src/tests/InstaCrafter.Extensions.Tests/InstaCrafter.Extensions.Tests.csproj --collect:"XPlat Code Coverage"
    - reportgenerator "-reports:src/tests/InstaCrafter.Extensions.Tests/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports/Coverage/Text" -reportTypes:TextSummary
    - reportgenerator "-reports:src/tests/InstaCrafter.Extensions.Tests/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports/Coverage/Html" -reportTypes:Html
    - cat Reports/Coverage/Text/Summary.txt
  coverage: /^\s*Line coverage:\s*\d+.\d+\%$/

build-app:
  stage: build-app
  tags:
    - k8s
  image: node:16-alpine3.11
  script:
    - node -v
    - npm -v
    - cd src/clients/react-app/
    - npm --force install -g yarn
    - yarn --non-interactive
    - yarn build --non-interactive
      
build-app-image:
  stage: build-app-image
  tags:
    - k8s
  image: docker:stable
  before_script:
    - apk add --no-cache docker-compose
    - docker info
  script:
    - echo "Building docker images"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd src/clients/react-app/
    - docker build -t instacrafter-react . -f prod.dockerfile
    - docker tag instacrafter-react:latest $CI_REGISTRY_IMAGE/instacrafter-react:latest
    - echo "Pushing docker image to registry"
    - docker push $CI_REGISTRY_IMAGE/instacrafter-react:latest
      
deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  environment:
    name: staging
  script:
    - echo "Creating namespace, it might exists already, so force!"
    - cd scripts/deploy
    - kubectl apply -f instacrafter-namespace.yaml
    - kubectl delete secret docker-registry registry-credentials --ignore-not-found --namespace=instacrafter-namespace
    - kubectl create secret docker-registry registry-credentials --docker-server=$CI_REGISTRY --docker-username=$CG_DEPLOY_USR --docker-password=$CG_DEPLOY_PWD --docker-email=$GITLAB_USER_EMAIL --namespace=instacrafter-namespace
