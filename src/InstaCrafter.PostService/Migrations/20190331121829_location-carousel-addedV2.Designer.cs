// <auto-generated />
using System;
using InstaCrafter.PostService.DataProvider.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InstaCrafter.PostService.Migrations
{
    [DbContext(typeof(PostgreSqlDatabaseContext))]
    [Migration("20190331121829_location-carousel-addedV2")]
    partial class locationcarouseladdedV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramCaptionDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("CreatedAtUtc");

                    b.Property<string>("MediaId");

                    b.Property<string>("Pk");

                    b.Property<string>("Text");

                    b.Property<DateTime>("UpdatedTimestamp");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Captions");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramCarouselItemDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarouselParentId");

                    b.Property<int>("Height");

                    b.Property<string>("InstaIdentifier");

                    b.Property<int>("MediaType");

                    b.Property<string>("Pk");

                    b.Property<long?>("PostId");

                    b.Property<DateTime>("UpdatedTimestamp");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("CarouselItems");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramImageDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CarouselId");

                    b.Property<int>("Height");

                    b.Property<string>("Path");

                    b.Property<long?>("PostId");

                    b.Property<string>("URI");

                    b.Property<DateTime>("UpdatedTimestamp");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("CarouselId");

                    b.HasIndex("PostId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramLocationDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ExternalId");

                    b.Property<string>("ExternalSource");

                    b.Property<long>("FacebookPlacesId");

                    b.Property<double>("Lat");

                    b.Property<double>("Lng");

                    b.Property<string>("Name");

                    b.Property<long>("Pk");

                    b.Property<string>("ShortName");

                    b.Property<DateTime>("UpdatedTimestamp");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramPostDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CaptionId");

                    b.Property<string>("ClientCacheKey");

                    b.Property<string>("Code");

                    b.Property<string>("CommentsCount");

                    b.Property<DateTime>("DeviceTimeStamp");

                    b.Property<string>("FilterType");

                    b.Property<bool>("HasAudio");

                    b.Property<bool>("HasLiked");

                    b.Property<string>("Height");

                    b.Property<string>("InstaIdentifier");

                    b.Property<int>("LikesCount");

                    b.Property<long?>("LocationId");

                    b.Property<int>("MediaType");

                    b.Property<string>("NextMaxId");

                    b.Property<bool>("PhotoOfYou");

                    b.Property<string>("Pk");

                    b.Property<DateTime>("TakenAt");

                    b.Property<string>("TrackingToken");

                    b.Property<DateTime>("UpdatedTimestamp");

                    b.Property<long>("UserId");

                    b.Property<int>("ViewCount");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("CaptionId");

                    b.HasIndex("LocationId");

                    b.ToTable("InstaPosts");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramVideoDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CarouselId");

                    b.Property<int>("Height");

                    b.Property<string>("Path");

                    b.Property<long?>("PostId");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpdatedTimestamp");

                    b.Property<string>("Url");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("CarouselId");

                    b.HasIndex("PostId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramCarouselItemDto", b =>
                {
                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramPostDto", "Post")
                        .WithMany("Carousel")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramImageDto", b =>
                {
                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramCarouselItemDto", "Carousel")
                        .WithMany("Images")
                        .HasForeignKey("CarouselId");

                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramPostDto", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramPostDto", b =>
                {
                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramCaptionDto", "Caption")
                        .WithMany()
                        .HasForeignKey("CaptionId");

                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramLocationDto", "Location")
                        .WithMany("Posts")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("InstaCrafter.PostService.DtoModels.InstagramVideoDto", b =>
                {
                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramCarouselItemDto", "Carousel")
                        .WithMany("Videos")
                        .HasForeignKey("CarouselId");

                    b.HasOne("InstaCrafter.PostService.DtoModels.InstagramPostDto", "Post")
                        .WithMany("Videos")
                        .HasForeignKey("PostId");
                });
#pragma warning restore 612, 618
        }
    }
}
